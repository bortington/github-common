# on:
#   workflow_call:
#     secrets:
#       CODACY_API_TOKEN:
#         required: true

name: Add repo to Codacy

on:
  workflow_dispatch:
    inputs:
      github-project-name:
        type: string
        description: Project name in GitHub, e.g. rac-bert for github.com/racwa/rac-bert
        
jobs:
  create-codacy:
    runs-on: ubuntu-latest
    steps:
    - name: "Set Env Variables for Codacy"
      shell: bash
      run: |
        echo "CODACY_ORGANIZATION_PROVIDER=$(if [[ $GITHUB_SERVER_URL == "https://github.com" ]]; then echo "gh"; else echo "ghe"; fi)" >> $GITHUB_ENV
        echo "CODACY_USERNAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 1)" >> $GITHUB_ENV
        echo "CODACY_PROJECT_NAME=${{ github.event.inputs.github-project-name }}" >> $GITHUB_ENV
        
    - name: Create Codacy Project if necessary
      shell: pwsh
      run: |
            $headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
            $headers.Add("api-token", "${{ secrets.CODACY_API_TOKEN }}")
            $headers.Add("caller", "string")
            $headers.Add("Content-Type", "application/json")
            $body = @{
              repositoryFullPath = $env:GITHUB_REPOSITORY
              provider = $env:CODACY_ORGANIZATION_PROVIDER
            } | ConvertTo-Json
            Write-Host "Sending request with body: $body"
            try {
              $response = Invoke-RestMethod 'https://app.codacy.com/api/v3/repositories' -Method 'POST' -Headers $headers -Body $body -SkipHttpErrorCheck
            } catch [System.Net.WebException] {
              Write-Host "An exception was caught: $($_.Exception.Message)"
            }
            $statusCodeInt = [int]$response.BaseResponse.StatusCode
            Write-Host Response: $statusCodeInt
            Write-Host $response
            $response | ConvertTo-Json
